---
title: Push processing and Web Sockets
desc: Understanding web sockets and Rails Action Cable
slides: true
---

:slide_bigtitle Push Processing

* TCP/IP in the Browser
* What is it?
* Where is it used?
* Recall HTTP is stateless
* Browser creates a new connection for each request and then closes it
* Expensive!

:slide_title Web Sockets - Conceptual

* Originally the only way that a browser would talk to the server was via the address bar or forms
* There was no way for the server to initiate communication to the browser.
* Needed for: notification, live updates and other functionality
* Microsoft introduced a Javascript call which allowed a js program to initiate HTTP silently (without the screen blinking)

:slide_title Client initiated

* Just refresh the browser
* Why was this not enough? 
* Push processing; notification
* Some early hacks
  * Long polling: leave the TCP/IP socket open
  * Not reliable and difficult
* Very bad scaling behavior!

:slide_title Websockets

* Browser feature
* TCP/IP socket
  * Can stay open
  * Are bi-directional
* Built as an extension to HTTP
* Still pretty complex
* Libraries are built to make it easier!

:slide_title Using Websockets with Rails

* Rails Action Cable
* Javascript code libraries
* Rails feature to allow WebSockets connections
* Fairly intricate to wire up
* But not hard once you understand it
* Other options is [Pusher.com](https://pusher.com)


