---
title: PID Control
desc: "Proportional, Integral, Derivative"
slides: true
---
:slide_title PID Control

* PID is a well known technique for smoothing out control, to avoid oscillation. PID stands for
* Applying PID control to your algorithm will make it more robust and perform more consistently. When used with a wall follower it will help better follow the wall without too much fluctuation.
* It will make the robot turn at a higher speed when you are too away from the designated route (too far or too close to the wall), and turn at a slower speed when you are close to it.

:slide_title Example Code

:image :400, :pid_code

:slide_title Graph

:image :pa2pidgraph

:slide_title Nice video

<iframe width="560" height="315" src="https://www.youtube.com/embed/4Y7zG48uHRo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
Here are some great links. You will be amazed at how well this works.

:slide_title Some nice links

* [MIT Pid Video](https://www.youtube.com/watch?v=4Y7zG48uHRo)
* [ROS PID Package ](http://wiki.ros.org/pid)
* [Learn PID](https://en.wikipedia.org/wiki/PID_controller)
* [The PID Tuning Guide](/content/topics/documents/pidtuningguide.pdf)
* [PID without a PhD](/content/topics/documents/pidwithoutaphd.pdf)
