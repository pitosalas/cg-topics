---
title: PA LIDAR wall follow
desc: Using LIDAR sensing to drive the robot along a wall
slides: true
---
:slide_title Purpose

Wall Following happens to be one of the fundamental behaviors that have to be solved on your Robotics journey. It is also one of the most popular initial assignments for new roboticists. This assignment will get you using the LiDAR. You will also learn how to control the robots movement for a more complex task.

:slide_title What I hope you will learn

* Working with LIDAR data. Process and filtering sensor noise.
* Using math (especially geometry) to solve real world robotics problems
* Use PID processing to make the robot behave reasonably
* Learn what odometry is and how it is represented in ROS
* Learn how to think about a more complicated robot behavior, and how to use simple state management to control it

:slide_title Critical Techniques that will help you

* :topic_link :working_with_lidar_data
* :topic_link :pid_control

## Do this

This not an easy assignment so don't wait until the last minute. Remember to also look at the PRRExamples repo that you have been provided.

### Assignment Specifics

* Write ROS code that allows your robot to follow a wall or perimeter.
* Demonstrate in simulation
* You are free to refer to hints for inspiration, and are encouraged to experiment with novel ideas. 
  * Write ROS code to have the robot find a wall
  * Then drive along the wall, maintaining a distance of 1.0 meters as best you can
  * Handle inside and outside corners as well as a wall that stops, so you have to make a u turn and go along the other side.

### Reasonale steps

* Publish movement commands to a robot in Gazebo simulation
* Subscribe to the LiDAR scan topic to detect how far the robot is from the wall
* Design your own algorithm or use a PID controller to move forward while staying parallel with the wall
* Next have it follow a single wall, and make a u-turn to follow its other side
* Next have it follow the "inside" of an L-Shaped Wall
* Next have it follow  the "inside" of a rectangular wall
* Write a ROS node with publishers and subscribers for `cmd_vel` and `scan`
* Test using any of the _stage_1, _2, or _4 gazebo worlds

### Extra Challenges for Extra Points

* Make this work with a physical robot
* Follow a rectangular wall, on the outside
* Follow a corridor that is 2x the width of the robot
* Follow such a corridor to a dead end and rotate in place

## Deliverables submitted through Gradescope

* ROS Package with
  * Commented Python source code file
  * README with specific instructions on how to run it
  * Correct package.xml CMakeLists.txt
* Video of your program running in gazebo or the lab


## Video of sample solution

[Sample Solution](https://www.youtube.com/watch?v=yH474O4mAdw&list=PLWp7_Yk4l1aPcMGxCCvqKCSwnkTBBInI3&index=76)

## How to Run

### The Skeleton Code

1. `roslaunch turtlebot3_gazebo turtlebot3_stage_1.launch`
2. Move robot to the south of the southern wall in stage_1.
3. `rosrun wall_follower wall_follower.py`

### The Final Submission

1. `roslaunch turtlebot3_gazebo turtlebot3_stage_1.launch`
2. Move robot to the south of the southern wall in stage_1.
3. `rosrun wall_follower wall_follower_answer.py`

## Instructions

1. Subsribe to the `scan` topic to receive `LaserScan` messages.
2. Move the robot to the south of the souther wall in the `turtlebot3_stage_1` world.
3. Circumnavigate the wall by maintaining a constant distance.
4. Use PID control.
5. Demonstrate this in SIM.

## References

1. PRR Chapters 6 and 7
1. [Robotics Programming: PID Algorithm](https://www.youtube.com/watch?v=dynSWBXu9aA): Shows how to implement the math of PID control in code, and gives a high-level overview of the algorithm.
2. [How to move objects in Gazebo using its GUI](https://answers.gazebosim.org//question/13445/how-to-move-objects-and-robot-models-using-gui/)
3. [Difference between Gazebo and RViz](https://answers.ros.org/question/200044/different-between-gazebo-and-rviz/)

## Notes

1. Get a feel for what kind of data the `scan` topic publishes by moving the robot around in Gazebo and executing `rostopic echo scan` on a separate terminal.

2. Change the `fixed_frame` in RViz from `odom` to `base_link` to make RViz graphically display the LIDAR readings.


