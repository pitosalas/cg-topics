---
title: "Service API - 0: Introduction"
---
## Here are the steps:

* Read the overview below

* **Setting up your cloud architecture - <%= link_to_topic :hw_digital_ocean_1 %>**

* **Setting up your Sinatra app - <%= link_to_topic :hw_digital_ocean_2 %>**

* **Setting up CI/CD - <%= link_to_topic :hw_digital_ocean_3 %>**

## Overall Objective

<%= include_image "/content/topics/images/frontend.png" , extra: "style=\"max-width: 150\%\""%>

In this homework, we will create a multi-server architecture for making a simple app for creating and retrieving a list of users from the database! The homework proceeds in 4 steps. Each one will be assigned separately.

## Architecture

* The structure of your final result will include multiple droplets
* The logic of each will be trivial. 
* Our objective here is to practice creating a multi-node architecture and deploying it

### Digital Ocean Architecture

* Each student will have two droplets named, **yourname**-frontend and **yourname**-service
    * e.g. pito-frontend (1 Droplet) will be running a Sinatra app, responsible for asking the Service API for the list of users, and render a html page for it.
    * e.g. pito-backend (1 Droplet). Will also be running a Sinatra app, Responsible for handling the service requests, and talking to Postgres and retrieving Users' information.
* Each team will share the postgres managed database across the students, named **projectname**-pg. 
    * It will be used for student's individual projects as well as nano twitter.
* NanoTwitter itself will have, in addition, at least three more droplets:
    * one for the `front end` of nT
    * one for the `backend` of nT 
    * and one more for an additional service.
    
## Flow

* The request logic will look like this: 

<%= include_image "https://static.swimlanes.io/e86bed77d0258067e318c30e9f2c52fa.png", extra: "style=\"max-width: 150\%\""%>

