---
title: Authentication and Authorization Concepts
slides: true
---
:h3 Underlying Concepts

:callout :small, "Beware", " This is hairy stuff!"

1. Authentication: As an app runs, need to know "who is logged in"
1. Authorization: For anyone who is logged in: What is s/he allowed to do
1. Cryptographic one-way hash
1. Statelessness of http, statefulness and sessions

:topic_include :sessions

:topic_include :one_way_hash

:slide_title Key Patterns

* True of more or less any approach to authorization and authentication
* User record
  * There is some kind of User record corresponding to each user (who can log in)
  * User is designated internally by a User (or Account, or similar concept)
* A globally accessible method "current_user"
  * Can be called anywhere to see who is logged in
  * Decide what it returns if no-one is logged in
* For Authorization, some choices:
  * Access control lists: List of people who are allowed to do operation X
  * User Capabilities: Each user has a series of CAN_xxx flags in the user database
  * User Types: Admin, Operator, Guest, etc.

