---
title: "PA: Race Track"
desc: "Robot starts on a race track and completes a lap"
---
:h2 Introduction

* This assignment contains many open-ended problems in perception, planning, and controls.
* It is a group project based on the groups you are in.
* Only one team member needs to submit it, Latte will copy it to the others
* Remember to `cd ~/catkin_ws/src/prrexamples; git pull`

:h3 Rules

* You group must write all of your own code
* You cannot "hard code" a solution by following a predetermined path
* You cannot "hard code" state changes based on time/position if you use a FSM to determine controls
* You cannot have a cmd_vel.linear.x > 2 or cmd_vel.angular.z > pi/2
* The robot cannot go out of bounds
* The robot cannot hit an obstacle in or outside of the track

:h3 Purpose

* Write a program to complete at least half a lap around the track as fast as possible.

:h3 What I hope you will learn

* How to solve an open-ended problem in robotics using any/all tools at your disposal
* How to use LiDAR and camera for obstacle avoidance in a unknown environment

:h3 Topics and Message Types

* cmd_vel [Twist](http://docs.ros.org/melodic/api/geometry_msgs/html/msg/Twist.html)
* odom [Odom](http://docs.ros.org/melodic/api/nav_msgs/html/msg/Odometry.html)
* scan [LaserScan](http://docs.ros.org/melodic/api/sensor_msgs/html/msg/LaserScan.html)
* camera/image/compressed [CompressedImage](http://docs.ros.org/melodic/api/sensor_msgs/html/msg/CompressedImage.html)
* camera/image [Image](http://docs.ros.org/melodic/api/sensor_msgs/html/msg/Image.html)

:h2 Assignment

* You will provided with racetrack.launch which launches a gazebo world with a race track and a turtlebot3_waffle model.
* **Make sure you clone [aws-robomaker](https://github.com/aws-robotics/aws-robomaker-racetrack-world.git) into the directory `catkin_ws/src`** (don't forget to `catkin_make`)
* To run the gazebo world:
:source_begin :python
roslaunch prrexamples racetrack.launch
:source_end
* The robot will begin right at the start of the race track.
* Drive forwards around the track staying in bounds while also avoiding various obstacles using camera and LiDAR.
* Complete at least a half lap successfully for the base assignment.

:h3 Additional Challenges

* Complete the track in a faster time than before
* Add in obstacles that will be in the robots path
* You can also try adding in a dense configuration of obstacles for even more of a challenge

:h3 Suggested Steps

* Subscribe to the compressed image ore regular image topic for the camera and scan topic for LiDAR
* Use teleop control to navigate around the track to get an idea of what the robot will see along the track
* Think of novel LiDAR and camera perception algorithms that can be used to navigate the robot
* Test and iterate
* Try additional challenges

:h3 References and resources

* OpenCV <https://docs.opencv.org/master/d6/d00/tutorial_py_root.html>
* OpenCV to ROS compatible image bridge <http://wiki.ros.org/cv_bridge/Tutorials/ConvertingBetweenROSImagesAndOpenCVImagesPython>
* Contours <https://docs.opencv.org/3.4/d4/d73/tutorial_py_contours_begin.html>
* Line recognition <https://opencv-python-tutroals.readthedocs.io/en/latest/py_tutorials/py_imgproc/py_houghlines/py_houghlines.html>
* Image segmentation <https://docs.opencv.org/3.4/da/d97/tutorial_threshold_inRange.html>
* AWS Robomaker GitHub <https://github.com/aws-robotics/aws-robomaker-racetrack-world.git>

:h3 Deliverables

* This assignment is for teams of 2 (or 3) students, which are created just for this assignment
* Each member of the team will submit an original reflections
* Both members of the team will submit the same ROS package and videos

#### ROS Package and videos

* A correctly structured ROS package including
  * Nicely commented python source files
  * Appropriate launch file
  * Readme explaining how the code works
* Video of your program running
  * Best to put the video on youtube and give the link
  * Feel free to narrate to explain interesting things that are happening

