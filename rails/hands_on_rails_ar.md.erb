---
title: Hands-on with Rails DBs and Models
---
## Live Coding

### Database schema for an event schedule

<%= source_begin "language-ruby" %>
Human(name, dob, gender, zipcode)
Event(name, date)
Registrations(human_id, event_id, status, comment)
<%= source_end %>

### Create rails app

<%= source_begin "language-ruby" %>
rails new handson --database=postgresql
cd handson
bundle lock --add-platform x86_64-linux --add-platform ruby
<%= source_end %>

### Gemfile

<%= source_begin "language-ruby" %>
gem 'pry-byebug'
gem 'better_errors'
gem 'awesome_print'
gem 'faker'
gem 'hirb'

# remember to
bundle update
<%= source_end %>

### Create the database tables

<%= source_begin "language-ruby" %>
rails generate resource Human name:string dob:date gender:string zipcode:string
rails generate resource Event name:string event_date:date event_time:time
rails generate model Registration human_id:integer event_id:integer status:string comment:string
<%= source_end %>

### Define sample data in seeds.rb

<%= source_begin "language-ruby" %>
Event.delete_all
Human.delete_all
Registration.delete_all

3.times do
  event_name = (Faker::Hacker.ingverb + " " + Faker::Hacker.noun + "s").capitalize
  Event.create(name: event_name, event_date: Faker::Date.between(from: 1.year.ago, to: 1.day.ago), event_time: '12:00pm')
end

(1..5).each do
  p = Human.create(name: Faker::Name.name,
    dob: Faker::Date.between(from: 30.years.ago, to: 10.years.ago),
    gender: ['f', 'm'].sample, zipcode: Faker::Address.zip)
end

10.times do
  r = Registration.create(human_id: Human.all.sample.id, event_id: Event.all.sample.id, status: "OK", comment: "Wonderful!")
end
<%= source_end %>

### Commands relating to seeding
<%= source_begin "language-ruby" %>
rails db:create  # creates the database for the current env
rails db:migrate # Run latest migrations
rails db:seed    # (only) runs the db/seed.rb file
rails db:setup   # runs db:schema:load, db:seed
<%= source_end %>

### Examining the databases from the Rails console
*In the rails console you can type ruby commands (it's pry)*
<%= source_begin "language-ruby" %>
rails console
Human.all
Human.where(gender: 'm')
Human.where("dob > ?", Date.new(1995))
Human.where("dob > ?", Date.new(1995)).count
<%= source_end %>

### CRUD operations (Create, Read, Update, Delete)
<%= source_begin "language-ruby" %>
p = Human.new(name: "Pito", dob: '12-12-2012', gender: 'f', zipcode: 12355)
p.new_record?
p.save
p = Human.create(name: "Amin", dob: '12-12-2014', gender: 'm', zipcode: 31231)
p.delete
<%= source_end %>

### Associations, declared in `app/models/model_name.rb`
<%= source_begin "language-ruby" %>
class Human < ApplicationRecord
  has_many :registrations
  has_many :events, through: :registrations
end
class Event < ApplicationRecord
  has_many :registrations
  has_many :humen, through: :registrations
end
class Registration < ApplicationRecord
  belongs_to :human
  belongs_to :event
end
<%= source_end %>

### Association, used

<%= source_begin "language-ruby" %>
$ rails console
Human.first.registrations
Human.where(gender: "f").first.registrations
Event.first.humen
<%= source_end %>

#### Validations

*Validations are applied by ActiveRecord, NOT the database*
<%= source_begin "language-ruby" %>

# add this to the /app/models/human.rb file
validates :zipcode, length: { is: 5}    # declared in model

# then in shell:
$ rails console 
p = Human.first
p.zipcode = 1                           # invalid value
p.valid?                                # explicit check
p.save                                  # Is not permitted
p.save!                                 # Same but exception
<%= source_end %>

## Appendices

### References

* [Awesome Print](https://github.com/michaeldv/awesome_print)
* [ActiveRecord Associations](http://guides.rubyonrails.org/association_basics.html#the-has-many-through-association)
* [ActiveRecord Queries](http://guides.rubyonrails.org/active_record_querying.html)
* [ActiveRecord Queries Cribsheet](http://cosi236b.courses.salas.com.s3-website-us-west-2.amazonaws.com/content/cribsheets/05_activerecord_queries/)
* [ActiveRecord Validations](http://edgeguides.rubyonrails.org/active_record_validations.html#validation-helpers)
* [Validations Cribsheet](http://cosi236b.courses.salas.com.s3-website-us-west-2.amazonaws.com/content/cribsheets/03_rails_validations/)
* A free database inspection utility for mac. [Liya](http://cutedgesystems.com/software/Liya/)
