---
title: Robotics Term Projects
slides: true
---
:slide_bigtitle Overall Process

1. [DONE] General Brainstorming in a Lab early in the semester. (see :topic_link :project_selection)
1. [DONE] Each student writes up one or two project ideas to submit as homework
1. [DONE] Teams are proposed by a group of 1, 2 or 3 students. Pito has to approve
1. [DONE] In Class "Project Bazaar" where we talk and vote and choose projects
1. [DONE] Teams commit to a project
1. [DONE] Pursuing the project (either alone or with a teammate)
1. [DONE] Weekly project updates (scrum style)
1. [DONE] Preparing for the "Autonomous Robotics Final Project Showcase"
1. Writing a Project Report and adding it to the Lab Notebook (see below)
1. Demoing your project and :topic_link :poster on Showcase Day

:slide_title Scope

* Starting now the majority of your "homework" will be your term project.
* Expect 5-10 hours a week per student
* This is work outside the classroom (and also outside lab time)
* You will need to plan and manage your time to achieve this

:slide_title Final Submission

* Link to your clean GitHub repo, in the campusrover github organization. While we will start looking at this for grading, you can still make corrections and adjustments until demo day. 
* Each team member contributes one FAQ item to the Labnotebook
* A Project Report in the Labnotebook

:slide_title Autonomous Robotics Final Project Showcase

* You (and your teammates) prepare to demonstrate your work in the best possible light
* You also prepare a :topic_link :poster explaining your project
* The teaching staff plus at least one outside robotics expert will visit and hear your presentation and ask you questions

:slide_title Grading

* The project as a whole is graded. All aspects of the work and deliverables are considered.
* In the case of team, we grade the work of the team as a whole
* Each team member however will be assigned a grade reflecting their level of participation and contribution to the group work. 
* In other words, you might not get the full project grade if you didn't participate fully in the project. 

:slide_bigtitle Details

:slide_title Github Repo

* The code should be clean and well structured, and organized as a working ROS package. 
* It should not have any random left over files so that you would be proud to put the link on your resume
* It should include the pdf of your :topic_link :poster
* It should include a readme.md including links to the labnotebook Project Report (check [How to write a quality readme](https://dev.to/coderarchive/writing-a-high-quality-readme-1k3j) for ideas)

:slide_title Final Project report

* Report should be around 10 pages
* We pay attention to appearance, quality of writing, "fit and finish". 
* You will add it to the appropriate section of the Lab Notebook.
* Here are instructions on how to do that: [Lab Notebook Final Reports Section](https://campus-rover.gitbook.io/lab-notebook/reports)

:slide_title Rough outline of report

1. Introduction
    1. Problem statement, including original objectives
    1. Relevant literature
1. What was created (**biggest section**)
    1. Technical descriptions, illustrations
    1. Discussion of interesting algorithms, modules, techniques
    1. Guide on how to use the code written
    1. Clear description and tables of source files, nodes, messages, actions and so on
1. Story of the project. 
    1. How it unfolded, how the team worked together
    1. problems that were solved, pivots that had to be taken
    1. Your own assessment

:slide_title Presenting and Explaining Your Project

* Show case what you've learned and what you built in the best possible light
* Come up with a cool and interesting demo
* Make sure that you reserve the robot you need for your demo
* If you want to share a demo with another team that's fine
* But the assessment will be individual

:slide_title Contribution to Lab Notebook

* Each student should make one Notebook contributions.
* Think about a how-to, tutorial, explanation, concept, that you had to figure out yourselves that was difficult to track down and write it up for the next generation of students
* Here are some examples: [Communicating with Rosserial](https://campus-rover.gitbook.io/lab-notebook/ros-tips/communicate-with-rosserial), [AWS RoboMaker](https://campus-rover.gitbook.io/lab-notebook/miscellaneous/aws-robomaker), [Alexa Voice Integration](https://campus-rover.gitbook.io/lab-notebook/cr-package/voice/voice)

