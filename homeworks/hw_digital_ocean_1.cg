---
title: "Service API - 1: Cloud"
---

<link rel="stylesheet" href="http://prismjs.com/themes/prism-okaidia.css"/>
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.5.0/prism.min.js"></script>

## What to submit

Answer these questions at the end and submit to latte as pdf:

1. What is an "Image"?
2. What are the differences between the regular Ubuntu image and Ruby on Rails image?
3. What are the differences between a public and a private IP address?
4. When setting up the database, why do we have to setup "Inbound Sources"?

## Prerequisites

* Read <%= link_to_topic :hw_digital_ocean_0 %>
* DigitalOcean account
  * Signup and get an API key: [https://cloud.digitalocean.com/account/api/](https://cloud.digitalocean.com/account/api/) -> "Generate New Token". **Write down the token**
* SSH key on DigitalOcean
  * Go on: [https://cloud.digitalocean.com/account/security](https://cloud.digitalocean.com/account/security) and add your "SSH Key" following the instructions on the site, **and write down your "fingerprint"**
* DO command line tool `doctl`
  * Install: [https://github.com/digitalocean/doctl#installing-doctl](https://github.com/digitalocean/doctl#installing-doctl)
* Create a repo using this template: [https://github.com/xumr0x/service-api-example](https://github.com/xumr0x/service-api-example). This will create a repo in your account, following the template.

## Step 0 - Set your team's project as default for your account

* Select your team -> Settings -> check "This is my default project" -> save.

<%= include_image "/content/topics/images/default_team.png", extra: "style=\"max-width: 145%;\"" %>

* Authenticate yourself using your DO token: `doctl auth init`

## Step 1 - Create Resources on DigitalOcean

* Create your front end droplet:
  * *Replace `$fingerprint` below with your "fingerprint"*
  * *Replace `$frontend-name` below with something unique, e.g. `pito-frontend`*
<pre>
<code class="language-bash">doctl compute droplet create $frontend-name frontend-sinatra --size s-1vcpu-1gb --image rails-18-04 --region nyc3 --ssh-keys $fingerprint --enable-private-networking</code>
</pre>

You should see something like this:

<pre>
<code class="language-bash">ID           Name                Public IPv4    Private IPv4    Public IPv6    Memory    VCPUs    Disk    Region    Image                       Status    Tags    Features    Volumes
178741332    frontend-sinatra                                                  1024      1        25      nyc3      Ubuntu 18.04.3 (LTS) x64    new
</code>
</pre>

* Do the same for the Service  droplet, again picking a unique name, e.g. `pito-backend`ÃŸ

<pre>
<code class="language-bash">doctl compute droplet create $service-name --size s-1vcpu-1gb --image rails-18-04 --region nyc3 --ssh-keys $fingerprint --enable-private-networking</code>
</pre>

Now you should have 2 droplets created:

<pre>
<code class="language-bash">doctl compute droplet list
ID           Name                   Public IPv4        Private IPv4      Public IPv6    Memory    VCPUs    Disk    Region    Image                       Status    Tags    Features              Volumes
178741332    frontend-sinatra       165.227.117.206    10.132.199.188                   1024      1        25      nyc3      Ubuntu 18.04.3 (LTS) x64    active            private_networking
178741737    service-api-sinatra    138.197.75.224     10.132.17.75                     1024      1        25      nyc3      Ubuntu 18.04.3 (LTS) x64    new               private_networking
</code>
</pre>

Go on your droplet's public IP with your browser, you should see something like this:

<%= include_image "/content/topics/images/rails.png", extra: "style=\"max-width: 145%;\"" %>

## Step 2 - Setup database on DigitalOcean

Now you need a Postgres database server or instance. This is equivalent to a computer running postgres. Remember that each team will share a single managed postgres cluster, so only one team member has to do the following step:

<pre>
<code class="language-bash">doctl database create postgres-sinatra --engine pg --region nyc3 --size db-s-1vcpu-1gb --version 11 --num-nodes 1</code>
</pre>

**This step might takes a while to run...*

You should see something like this:

<pre><code class="language-bash">ID                                      Name                      Engine    Version    Number of Nodes    Region    Status      Size
bd0e7e9f-01ba-40cf-a48f-defbdde78560    postgres-sinatra          pg        11         1                  nyc3      creating    db-s-1vcpu-1gb
</code></pre>

You also need an initial database called "postgres" which we now create

*Replace `$ID` with the database ID you got above*

<pre>
<code class="language-bash">doctl database db create $ID postgres</code>
</pre>

## Step 3 - Setup the connections between your droplets and database

Go on [https://cloud.digitalocean.com/databases](https://cloud.digitalocean.com/databases) and click on the database you just created ("postgres-sinatra")

<%= include_image "/content/topics/images/db_dashboard.png", extra: "style=\"max-width: 145%;\"" %>

Click on "Add trusted sources" and select the two droplets, plus your laptop's ip.

<%= include_image "/content/topics/images/db_add_trusted_source.png", extra: "style=\"max-width: 145%;\"" %>

Then click "Allow these inbound sources only".

Now you should be able to access your database from your droplets and your laptop!

## Step 4 - Connect to database from your laptop

Click "Connection details" then "Flags" to see the commands for connecting using `psql`

<%= include_image "/content/topics/images/db_connection_details.png", extra: "style=\"max-width: 145%;\"" %>

Run that command in terminal and you should be able to connect to the database.

### **Now your cloud architecture is all ready to go!** ðŸŽ‰ Continue to next
* Next: <%= link_to_topic :hw_digital_ocean_2 %>


